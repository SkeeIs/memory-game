{"ast":null,"code":"import _classCallCheck from \"/Users/skeels/Desktop/my-code/memory-game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/skeels/Desktop/my-code/memory-game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/skeels/Desktop/my-code/memory-game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/skeels/Desktop/my-code/memory-game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/skeels/Desktop/my-code/memory-game/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/skeels/Desktop/my-code/memory-game/src/App.js\";\nimport React, { Component } from \"react\";\nimport gifs from \"./gifs.json\";\nimport Card from \"./components/Card\";\nimport Navbar from \"./components/Navbar\";\nimport Wrapper from \"./components/Wrapper\";\nimport \"./App.css\";\n\nvar shuffleArray = function shuffleArray(array) {\n  for (var i = array.length - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n    var _ref = [array[j], array[i]];\n    array[i] = _ref[0];\n    array[j] = _ref[1];\n  }\n\n  return array;\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      gifs: gifs,\n      score: 0,\n      highScore: 0,\n      message: \"Click each gif once to win!\",\n      clicked: []\n    };\n\n    _this.handleShuffle = function () {\n      var shuffledGifs = shuffleArray(gifs);\n\n      _this.setState({\n        friends: shuffledGifs\n      });\n    };\n\n    _this.newGame = function (event) {\n      console.log(\"new game.\");\n\n      _this.setState({\n        score: 0,\n        message: \"Game Over! You already turned that head!\",\n        clicked: []\n      });\n\n      _this.handleShuffle();\n    };\n\n    _this.handleClick = function (id) {\n      if (_this.state.clicked.length === 0) {\n        _this.newGame();\n      }\n\n      if (_this.state.clicked.indexOf(id) === -1) {\n        _this.handleIncrement();\n\n        _this.setState({\n          clicked: _this.state.clicked.concat(id)\n        });\n      } else {\n        _this.newGame();\n      }\n    };\n\n    _this.handleIncrement = function () {\n      var newScore = _this.state.score + 1;\n\n      _this.setState({\n        score: newScore,\n        message: \"You guessed correctly!\"\n      });\n\n      if (newScore >= _this.state.highScore) {\n        _this.setState({\n          highScore: newScore\n        });\n      } else if (newScore === 12) {\n        _this.setState({\n          correctIncorrect: \"You got them all! Good Game!\"\n        });\n      }\n\n      _this.handleShuffle();\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        score: this.state.score,\n        highScore: this.state.highScore,\n        message: this.state.message,\n        newGame: this.newGame,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, this.state.gifs.map(function (gifs) {\n        return React.createElement(Card, {\n          key: gifs.id,\n          handleClick: _this2.handleClick,\n          handleIncrement: _this2.handleIncrement,\n          handleShuffle: _this2.handleShuffle,\n          id: gifs.id,\n          gif: gifs.gif,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/skeels/Desktop/my-code/memory-game/src/App.js"],"names":["React","Component","gifs","Card","Navbar","Wrapper","shuffleArray","array","i","length","j","Math","floor","random","App","state","score","highScore","message","clicked","handleShuffle","shuffledGifs","setState","friends","newGame","event","console","log","handleClick","id","indexOf","handleIncrement","concat","newScore","correctIncorrect","map","gif"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport gifs from \"./gifs.json\";\nimport Card from \"./components/Card\";\nimport Navbar from \"./components/Navbar\";\nimport Wrapper from \"./components/Wrapper\";\nimport \"./App.css\";\n\nconst shuffleArray = (array) => {\n  for (let i = array.length - 1; i > 0; i--) {\n      \n      let j = Math.floor(Math.random() * (i + 1));\n      \n      [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n};\n\n\nclass App extends Component {\n  state = {\n    gifs,\n    score: 0,\n    highScore: 0,\n    message: \"Click each gif once to win!\",\n    clicked: []\n  };\n\n  handleShuffle = () => {\n    let shuffledGifs = shuffleArray(gifs);\n    this.setState({ friends: shuffledGifs });\n  };\n\n  newGame = (event) => {\n    console.log(\"new game.\");\n    \n    this.setState({\n      score: 0,\n      message: \"Game Over! You already turned that head!\",\n      clicked: [],\n    });\n    this.handleShuffle();\n    }\n\n    handleClick = id => {\n      if (this.state.clicked.length === 0) {\n        this.newGame()\n      }\n      if (this.state.clicked.indexOf(id) === -1) {\n        this.handleIncrement();\n        this.setState({ clicked: this.state.clicked.concat(id) });\n      } else {\n        this.newGame();\n      }\n    };\n\n    handleIncrement = () => {\n      const newScore = this.state.score + 1;\n      this.setState({\n        score: newScore,\n        message: \"You guessed correctly!\"\n      });\n      if (newScore >= this.state.highScore) {\n        this.setState({ highScore: newScore });\n      }\n      else if (newScore === 12) {\n        this.setState({ correctIncorrect: \"You got them all! Good Game!\" });\n      }\n      this.handleShuffle();\n    };\n\n\n  render() {\n    return ( \n      <div>   \n        <Navbar\n          score = {this.state.score}\n          highScore = {this.state.highScore}\n          message = {this.state.message}\n          newGame={this.newGame}\n        />\n        <Wrapper>\n          {this.state.gifs.map(gifs => (\n            <Card\n              key = {gifs.id}\n              handleClick = {this.handleClick}\n              handleIncrement = {this.handleIncrement}\n              handleShuffle = {this.handleShuffle}\n              id = {gifs.id}\n              gif = {gifs.gif}\n            /> \n          ))}  \n        </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}